name: Run tests on any Push event
on:
  push:
    branches:
      - '*'
jobs:
  LintsBlack:
    runs-on: ubuntu-latest
    name: Black
    steps:
      - uses: actions/checkout@v1
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./api"
  LintsFlake8:
    runs-on: ubuntu-latest
    name: Flake8
    steps:
      - uses: actions/checkout@v1
      - uses: py-actions/flake8@v2
        with:
          path: "./api"
          args: "--statistics --count --ignore E501"
  LintsIsort:
    runs-on: ubuntu-latest
    name: Isort
    steps:
      - uses: actions/checkout@v4  # ✅ Актуальная версия

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"  # или ваша версия Python

      - name: Install isort
        run: pip install isort

      - name: Run isort
        run: isort --profile=black --check-only ./api
  LintsMyPy:
    runs-on: ubuntu-latest
    name: MyPy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt
      - run: |
         mypy --config-file mypy.ini \
         --show-error-codes \
         --no-error-summary \
          api/
  Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run Docker Compose
        working-directory: ./db-test
        run: docker compose -f docker-compose.yaml up -d

      - name: Wait for containers
        run: sleep 3

      - name: Check running containers
        run: docker ps -a

      - name: View Docker logs
        run: docker compose logs

      - name: Set up Python
      - uses: actions/setup-python@v2
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Run tests
        run: coverage run -m pytest tests/test_api.py

      - name: Tests report
        run: coverage report